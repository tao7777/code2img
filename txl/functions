<source file="../src/detection/detection/HeuristicCloneDetector.java" startline="17" endline="19">
public HeuristicCloneDetector (double sim) {
    this.sim = sim;
}
</source>
<source file="../src/detection/detection/HeuristicCloneDetector.java" startline="22" endline="48">
public List < Clone > detectClones (Block qBlock, IIndex index) {
    List < Clone > clones = new LinkedList < Clone > ();
    Set < Block > candidates = new HashSet < Block > ();
    for (BlockElement be : qBlock.getBlockAsList ()) {
        if (! be.isPrefixTerm ()) break;

        Queue < Block > blocks = index.get (be.getTerm ());
        if (blocks != null) candidates.addAll (blocks);

    }
    for (Block cBlock : candidates) {
        if (isClone (qBlock, cBlock)) clones.add (new Clone (qBlock.getFileID (), qBlock.getStartLine (), qBlock.getEndLine (), cBlock.getFileID (), cBlock.getStartLine (), cBlock.getEndLine ()));

    }
    return clones;
}
</source>
<source file="../src/detection/detection/HeuristicCloneDetector.java" startline="50" endline="113">
private boolean isClone (Block qBlock, Block cBlock) {
    if (qBlock.getID () < cBlock.getID ()) return false;

    if (qBlock.doesOverlap (cBlock)) {
        return false;
    }
    Block min, max;
    if (qBlock.numTokens () > cBlock.numTokens ()) {
        max = qBlock;
        min = cBlock;
    } else {
        max = cBlock;
        min = qBlock;
    }
    int threshold = (int) Math.ceil (max.numTokens () * this.sim);
    int sharedTokens = 0;
    int remainingTokens = max.numTokens ();
    if (min.numTokens () < threshold) {
        return false;
    }
    for (BlockElement be : max.getBlockAsList ()) {
        String term = be.getTerm ();
        int maxFreq = be.getFrequency ();
        Integer minFreq = min.getBlockAsMap ().get (term);
        if (minFreq != null) sharedTokens += Math.min (minFreq, maxFreq);

        remainingTokens -= maxFreq;
        if (sharedTokens >= threshold) {
            return true;
        }
        if ((sharedTokens + remainingTokens) < threshold) {
            return false;
        }
    }
    System.err.println ("HeuristicCloneDetector -- Bug?");
    if (sharedTokens >= threshold) return true;
    else return false;

}
</source>
